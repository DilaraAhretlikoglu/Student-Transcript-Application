<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADW
        BQAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGf8AcwADOwFkA00BoQNDAcwDSgGUAxsBJv8AIQADDAEQA0wBvQMAAf8DKAHp
        Az4B1wNDAcwDOgHbAw8B+QMGAf0DOgFiJAADDAEPAy4B5gMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wNLAZnAAAMpAT0DAAH/A0gByQMaASQUAAM2AVkDFAH3A0MBzAMFAQYcAANKAZIDAAH/
        AzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmAzwBZgM8AWYDPAFmAwAB/7wAAxEBFgMAAf8DSQGPJwAB/wNH
        AcYcAANLAZkDAAH/JwAB/7wAAx0B8ANNAaQIAAMGAQgUAAMXAR8IAAMUAfcDOgFgGAADSwGZAwAB/wgA
        AzoB2QMRARYEAANDAXgDTQGuCwAB/7gAAzABSgMUAfUDBAEFBAADSAGMAx0B8BAAAzwBZgMJAfsDFwEf
        BAADNgFZAwYB/RgAA0sBmQMAAf8LAAH/AxMBGgQAA0gBjANEAc0LAAH/uAADPQHWA00BswwAAz0B1gMd
        AfADCgENBAADOAFbAwAB/wM8AWYMAAMPAfkDGwEmFAADSwGZAwAB/wsAAf8DEwEaBAADSAGMA0QBzQsA
        Af+4AAMdAfEDKQE9EAADQgHRAyoB6AM6AWADAAH/AzcBWhAAAzoB2wNKAZQUAANLAZkDAAH/CwAB/wMT
        ARoEAANIAYwDRAHNCwAB/7sAAf8YAAM6AdkDAAH/AzkBXxQAA0MBzANDAcwUAANLAZkDAAH/CwAB/wMT
        ARoEAANIAYwDRAHNCwAB/7gAAxcB9AMaASQQAAM4AVsDAAH/AzoB2QMqAegDCgENEAADPgHXA00BoRQA
        A0sBmQMAAf8LAAH/AxMBGgQAA0gBjANEAc0LAAH/uAADMAHlA0EBcwwAAzwBZgMAAf8DNwFaBAADQgHR
        Ax0B8BAAAygB6QM7AWQUAANLAZkDAAH/CwAB/wMTARoEAANIAYwDRAHNCwAB/7gAA00BpgM4Ad4IAAM0
        AVMDAAH/AzwBZgwAAz0B1gMdAfADBgEIBAADGgEkAwAB/xgAA0sBmQMAAf8LAAH/AxMBGgQAA0gBjANE
        Ac0LAAH/uAADBAEFAwAB/wMrAUIEAAMTARkDNAFTFAADSAGMCAADSgHAA0wBvRgAA0sBmQMAAf8IAANI
        AYwDCwEOBAADMQFNA0ABcAsAAf+8AANBAXMDAAH/KAADRQGAAwAB/wMMARAYAANLAZkDAAH/JwAB/8AA
        A04BqwMAAf8DLQFGGAADBAEFA0wBnAMAAf8DKQE9GAADGgEkAzQB4QMAAf8DTQGzA00BswNNAbMDTQGz
        A00BswNNAbMDTQGzA00BswNNAbMDAAH/A00Bs8AAA0EBcwMAAf8DOAHeA0IBdgMaASQEAAMmATgDTQGz
        AxQB9QMUAfcDEwEZHAADFwEfA0sBmQNLAZkDSwGZA0kBwgMAAf8DAAH/AwAB/wMAAf8DAAH/A0sBmQNL
        AZkDSwGZA0sBmcQAAwQBBQNKAZYDMAHlAxcB9AMAAf8DHQHxAz0B1gM5AV7/AP8A/wCLAAFCAU0BPgcA
        AT4DAAEoAwABUAMAARQDAAEBAQABAQUAAfAXAAP/AQAF/wcAAf8BBwP/BwAB+AEBAf8BAAEPBwAB8AH4
        AX8BAAEPBwAB4wH+AX8BPwHvBwAB5gH7AT8BMgFvBwABxAHxAT8BMgFvBwABzgEjAZ8BMgFvBwABzwEH
        AZ8BMgFvBwAB3wGPAZ8BMgFvBwABzwEHAZ8BMgFvBwABzgEnAZ8BMgFvBwABzAFxAT8BMgFvBwABxAH7
        AT8BMgFvBwAB5wH+Aj8B7wcAAfEB+AF+AQABBwcAAfgBIAH+AQABBwcAAfwBAwP/BwAF/wcABf8HAAs=
</value>
  </data>
</root>