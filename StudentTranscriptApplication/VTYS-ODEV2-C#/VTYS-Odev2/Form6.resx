<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACS
        CQAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABGQEAARkBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFk
        AwABGQMAAQEBAAEgBQABEAEn/wD/AP8AVQADGwEmA0MBqgMoAeADFAHwAwAB/wMRAfQDHAHsAzcBzQNB
        AXsDAwEE/wBhAAMVARwDQQG3AwQB/AMEAfwDQQG1A0EBewMzAVIDPgFxA0QBkAMeAekDAAH/AyUB4wM8
        AWkkAAMrAUIDHQHrAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwYB+wNDAa7oAAMpAT0DJAHkAw4B9wNBAXsDDgESGAADKQE+AzoByQMAAf8DRQGY
        AwUBBhwAAz8BvQMAAf8DOwFmAzsBZgM7AWYDOwFmAzsBZgM7AWYDOwFmAzsBZgM7AWYDOwFmAzsBZgM7
        AWYDOwFmAzsBZgM7AWYDRAGjAwYB++QAAx0BKAMZAe0DJwHhAyMBMiQAAwQBBQNEAZMDAAH/A0UBlRwA
        AzwBwgMAAf8MAAMZASMDJAE1KAADOwFmAwAB/+AAAwQBBQMsAdsDHQHqAxwBJzAAA0QBkwMAAf8DOgFk
        GAADPAHCAwAB/wwAA0MBhQM5AcoQAAMyAU8DMwFUAzMBVAMzAVQDMwFUAxEBFgM7AWYDAAH/4AADQgGB
        AwAB/wMuAUgIAAM3AVwDHQEpGAADQgF+AxABFQQAAwQBBQM6AckDJQHjAwMBBBQAAzwBwgMAAf8EAAMP
        ARQDEgEXA0QBkAM3Ac4DEgEXAxEBFggAAzsBxAM0AdEDNAHRAzQB0QM0AdEDJQE3AzsBZgMAAf/gAAMl
        AeMDPgG7CAADFgEeAxcB7gMcAewDGgEkEAADRQGeAwAB/wNCAX4IAAMpAT4DAAH/AzwBahQAAzwBwgMA
        Af8EAAMnAeEDAAH/AwAB/wMAAf8DAAH/AxQB8CAAAzsBZgMAAf/cAAMdASgDAAH/Ay4BRwwAAyABLgMU
        AfEDFAHwAxUBHAgAA0UBoQMAAf8DRQGeEAADHgHpAzcBzRQAAzwBwgMAAf8EAAMgAS0DIwEyA0UBnQMz
        AdQDIwEyAyEBLwgAA0QBkANEAZkDRAGZA0QBmQNEAZkDHQEoAzsBZgMAAf/cAANFAZUDAAH/AxUBHRAA
        AxwBJwMOAfYDDwH1Aw8BEwNDAaUDAAH/A0UBoRQAA0QBkAMZAe0UAAM8AcIDAAH/DAADQwGFAzkByhAA
        AzIB0wMoAeADKAHgAygB4AMoAeADKAQ7AWYDAAH/3AADQgGwAwAB/wMIAQoUAAMXAR8DBAH8AwAB/wMA
        Af8DRAGkGAADPgFxAxEB9BQAAzwBwgMAAf8MAAM4AV8DRQGRKAADOwFmAwAB/9wAAzAB1gMAAf8cAANE
        AasDAAH/AwAB/wMPARMYAAMzAVIDAAH/FAADPAHCAwAB/zwAAzsBZgMAAf/cAANEAaMDAAH/Aw8BExQA
        A0UBoQMAAf8DRAGrAwQB/AMPAfUDFQEcFAADQQF8AxQB8BQAAzwBwgMAAf8oAAMFAQYIAAMFAQYEAAM7
        AWYDAAH/3AADPAFpAwAB/wMgAS4QAANFAZ4DAAH/A0UBoQQAAxcBHwMOAfYDFAHwAxoBJBAAA0IBswMo
        AeAUAAM8AcIDAAH/JAADMAHWAzMB1AMJAQsDQwGqAywB2QQAAzsBZgMAAf/cAAMGAQgDCgH5Az4BcAwA
        A0UBnAMAAf8DRQGeDAADHAEnAxQB8QMcAewDHQEpCAADDgESAwQB/ANDAaoUAAM8AcIDAAH/BAADLgFI
        A0QBigNEAYoDRAGKA0QBigM3AVsIAAMSARgDHwHoAyQB5AMMAfgDJAE0BAADOwFmAwAB/+AAAzoByQMU
        AfADDAEQBAADDAEPAy8B2ANFAZsUAAMgAS4DFwHuAzcBXAgAAz8BdQMEAfwDIQEvFAADPAHCAwAB/wQA
        Az4BbwMwAdYDMAHWAzAB1gMwAdYDRAGODAADPwG9AwAB/wMzAdQDCwEOBAADOwFmAwAB/+AAAyMBMgME
        AfwDRQGYCAADDAEPHAADFgEeCAADIAEuAxMB8wM+AbwYAAM8AcIDAAH/JAADRAGnAwwB+AMwAU0DJwHf
        AzsBxAMEAQUDOwFmAwAB/+QAA0UBkQMAAf8DQQF7LAADGQEiAyoB3QMgAecDFQEcGAADPAHCAwAB/yQA
        Ay8BSQMhATAEAAMYASADNwFdBAADOwFmAwAB/+gAA0QBqwMAAf8DRQGbAwwBECAAAy0BRQMhAeYDFAHw
        AykBPRwAAzwBwgMAAf88AAM7AWYDAAH/7AADRQGRAwoB+QMUAfADPgFwAyEBLwMPARMEAAMIAQoDEwEZ
        Ay4BSAM+AbwDAAH/AyoB3QMgAS0gAANFAZsDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMdAevwAAMiATEDOgHGAw4B9wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMfAegDQgGAAwQBBSgAA0UBmgM8AcIDPAHCAzwBwgM8AcIDPAHCAzwBwgM8
        AcIDPAHCAzwBwgM8AcIDPAHCAzwBwgM8AcIDPAHCAzwBwgM/Ab0DKwFC+AADBgEIAzwBaANEAaIDMAHW
        A0MBrwNFAZUDHQEo/wD/AP8A/wB0AAFCAU0BPgcAAT4DAAEoAwABZAMAARkDAAEBAQABAQUAAZABARYA
        A/8BAAb/AcAJAAb/AcAJAAH/AQABPwP/AcAJAAH8AQABHwHwAQABAQHACQAB+AE/AQcB8AEAAQEBwAkA
        AfAB/wGHAfMBnwH5AcAJAAHhAf8B4wHzAZ4BAQHACQAB4wE/ASEB8gEGAQEBwAkAAeYBHgExAfIBBwH5
        AcAJAAHHAQwBeQHyAQYBAQHACQABxwGAAfkB8wGeAQEBwAkAAccBwQH5AfMBnwH5AcAJAAHPAeEB+QHz
        Af8B+QHACQABxwHAAfkB8wH/AWkBwAkAAccBiAF5AfMB/gEJAcAJAAHHARwBMQHyAQYBCQHACQAB4gE+
        ATEB8gEHAQkBwAkAAeMBfwFjAfMB/gEBAcAJAAHxAf8BwwHzAf4BSQHACQAB+AF/AYcB8wH/AfkBwAkA
        AfwBCAEPAfABAAEBAcAJAAH+AQABHwH4AQABAQHACQAB/wGABP8BwAkABv8BwAkABv8BwAkACw==
</value>
  </data>
</root>